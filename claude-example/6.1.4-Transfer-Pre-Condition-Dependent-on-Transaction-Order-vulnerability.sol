// SPDX-License-Identifier: MIT
pragma solidity ^0.4.18;

/**
 * 此合約存在交易順序依賴(Transaction Order Dependence)漏洞
 */
contract TransactionOrdering {
    // 狀態變數，可能在用戶交易之間被更改
    uint256 price;  // 重點：這是一個可以被動態修改的狀態變數，沒有任何機制確保用戶調用 buy() 時使用的是預期的價格
    address owner;
    
    event Purchase(address _buyer, uint256 _price);
    event PriceChange(address _owner, uint256 _price);
    
    modifier ownerOnly() {
        require(msg.sender == owner);
        _;
    }
    
    function TransactionOrdering() {
        // constructor
        owner = msg.sender;
        price = 100;
    }
    
    /**
     * 漏洞點：buy() 函數沒有任何機制確保價格在用戶查詢到執行間沒有變化
     * 用戶在調用此函數時可能看到某一價格，但實際執行時價格已經被改變
     * 因為區塊鏈上的交易順序並不保證按照交易提交的時間順序執行
     */
    function buy() returns (uint256) {
        Purchase(msg.sender, price);
        return price;
    }
    
    /**
     * 攻擊者(合約擁有者)可以隨時更改價格
     * 當有用戶提交 buy() 交易但尚未被確認時，擁有者可以發送 setPrice() 交易
     * 如果提供更高的 gas price，可確保 setPrice() 先被處理
     */
    function setPrice(uint256 _price) ownerOnly() {
        price = _price;
        PriceChange(owner, price);
    }
}