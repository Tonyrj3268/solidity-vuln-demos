// 以下程式碼示範存在整數溢位漏洞的版本
contract IntegerOverflowMappingSym1 {
    // 狀態變數：map 用來儲存每個 key 對應的 uint256 數值
    mapping(uint256 => uint256) map;

    // 漏洞函式 init：
    // 這裡使用 += 運算子直接做加法，未加入檢查
    // 當 map[k] 的值接近 uint256 的最大值時，加上 v 的數值會導致 overflow，使得最終結果從大數變成小數
    function init(uint256 k, uint256 v) public {
        // Vulnerable code: 未使用檢查的加法操作，可能導致整數溢位
        map[k] += v;  // <<-- 漏洞重點
    }
}