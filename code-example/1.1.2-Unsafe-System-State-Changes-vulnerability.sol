// 脆弱合約示範：Unsafe System State Changes
// 此合約存在漏洞，因為在狀態改變及事件發送之間呼叫外部函式 d.f()，
// 攻擊者可利用該呼叫觸發 reentrancy 攻擊，導致系統狀態出現意外的變更

// 定義一個介面供外部呼叫
interface ICalled {
    function f() external;
}

contract Vulnerable {
    // 狀態變數：計數器
    uint256 public counter;

    // 事件：紀錄計數器更新
    event Counter(uint256 indexed newCounter);

    // 注意！以下函式存在漏洞：
    // 漏洞點：在外部呼叫 (d.f()) 前沒有發出事件，且外部呼叫後可能被用來重入調用此函式
    function bug(ICalled d) public {
        // 狀態更新
        counter += 1; // 漏洞重點：狀態改變後立即呼叫外部合約，可能導致 reentrancy

        // 外部呼叫：呼叫傳入合約的 f() 函式
        d.f();

        // 事件紀錄，應該在外部呼叫前觸發以確保狀態已穩定
        emit Counter(counter);
    }
}
